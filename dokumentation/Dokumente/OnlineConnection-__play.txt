async def __play(self):
    async with websockets.connect(f"{self.url}?key={self.key}") as websocket:
        while True:
            game_data = await websocket.recv()
            game = self.data_loader.load(game_data)
            time_data = requests.get(self.time_url).text
            server_time = self.data_loader.read_server_time(time_data)
            own_time = datetime.now(server_time.tzinfo).replace(microsecond=0)
            game.normalize_deadline(server_time, own_time)

            self.monitoring.update(game)

            if game.you.active:
                action = self.ai.create_next_action(game)
                await websocket.send(self.data_writer.write(action))